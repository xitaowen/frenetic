# OASIS_START
# DO NOT EDIT (digest: 3480a45047a3ad3b03842d9a5c3bbb29)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library netkat
"lib/netkat.cmxs": use_netkat
<lib/*.ml{,i}>: pkg_lwt
<lib/*.ml{,i}>: pkg_lwt.syntax
<lib/*.ml{,i}>: pkg_packet
<lib/*.ml{,i}>: pkg_lwt.unix
<lib/*.ml{,i}>: pkg_cstruct
<lib/*.ml{,i}>: pkg_dprle
<lib/*.ml{,i}>: pkg_lwt.syntax.log
<lib/*.ml{,i}>: pkg_str
<lib/*.ml{,i}>: pkg_ocamlgraph
<lib/*.ml{,i}>: pkg_openflow
<lib/*.ml{,i}>: pkg_topology
# Library quickcheck
"quickcheck/quickcheck.cmxs": use_quickcheck
<quickcheck/*.ml{,i}>: use_netkat
<quickcheck/*.ml{,i}>: pkg_lwt
<quickcheck/*.ml{,i}>: pkg_lwt.syntax
<quickcheck/*.ml{,i}>: pkg_packet
<quickcheck/*.ml{,i}>: pkg_quickcheck
<quickcheck/*.ml{,i}>: pkg_lwt.unix
<quickcheck/*.ml{,i}>: pkg_cstruct
<quickcheck/*.ml{,i}>: pkg_dprle
<quickcheck/*.ml{,i}>: pkg_lwt.syntax.log
<quickcheck/*.ml{,i}>: pkg_str
<quickcheck/*.ml{,i}>: pkg_ocamlgraph
<quickcheck/*.ml{,i}>: pkg_openflow
<quickcheck/*.ml{,i}>: pkg_topology
# Executable testtool
"test/Test.byte": use_quickcheck
"test/Test.byte": use_netkat
"test/Test.byte": pkg_lwt
"test/Test.byte": pkg_lwt.syntax
"test/Test.byte": pkg_oUnit
"test/Test.byte": pkg_packet
"test/Test.byte": pkg_pa_ounit
"test/Test.byte": pkg_pa_ounit.syntax
"test/Test.byte": pkg_quickcheck
"test/Test.byte": pkg_lwt.unix
"test/Test.byte": pkg_cstruct
"test/Test.byte": pkg_dprle
"test/Test.byte": pkg_lwt.syntax.log
"test/Test.byte": pkg_str
"test/Test.byte": pkg_ocamlgraph
"test/Test.byte": pkg_openflow
"test/Test.byte": pkg_topology
<test/*.ml{,i}>: use_quickcheck
<test/*.ml{,i}>: use_netkat
<test/*.ml{,i}>: pkg_lwt
<test/*.ml{,i}>: pkg_lwt.syntax
<test/*.ml{,i}>: pkg_oUnit
<test/*.ml{,i}>: pkg_packet
<test/*.ml{,i}>: pkg_pa_ounit
<test/*.ml{,i}>: pkg_pa_ounit.syntax
<test/*.ml{,i}>: pkg_quickcheck
<test/*.ml{,i}>: pkg_lwt.unix
<test/*.ml{,i}>: pkg_cstruct
<test/*.ml{,i}>: pkg_dprle
<test/*.ml{,i}>: pkg_lwt.syntax.log
<test/*.ml{,i}>: pkg_str
<test/*.ml{,i}>: pkg_ocamlgraph
<test/*.ml{,i}>: pkg_openflow
<test/*.ml{,i}>: pkg_topology
# Executable katnetic
<src/katnetic.{native,byte}>: use_netkat
<src/katnetic.{native,byte}>: pkg_lwt
<src/katnetic.{native,byte}>: pkg_lwt.syntax
<src/katnetic.{native,byte}>: pkg_packet
<src/katnetic.{native,byte}>: pkg_lwt.unix
<src/katnetic.{native,byte}>: pkg_cstruct
<src/katnetic.{native,byte}>: pkg_dprle
<src/katnetic.{native,byte}>: pkg_lwt.syntax.log
<src/katnetic.{native,byte}>: pkg_str
<src/katnetic.{native,byte}>: pkg_ocamlgraph
<src/katnetic.{native,byte}>: pkg_openflow
<src/katnetic.{native,byte}>: pkg_topology
<src/*.ml{,i}>: use_netkat
<src/*.ml{,i}>: pkg_lwt
<src/*.ml{,i}>: pkg_lwt.syntax
<src/*.ml{,i}>: pkg_packet
<src/*.ml{,i}>: pkg_lwt.unix
<src/*.ml{,i}>: pkg_cstruct
<src/*.ml{,i}>: pkg_dprle
<src/*.ml{,i}>: pkg_lwt.syntax.log
<src/*.ml{,i}>: pkg_str
<src/*.ml{,i}>: pkg_ocamlgraph
<src/*.ml{,i}>: pkg_openflow
<src/*.ml{,i}>: pkg_topology
# OASIS_STOP
<lib/*.ml>: syntax_camlp4o
<frenetic/*.ml>: syntax_camlp4o
<test/*.ml>: syntax_camlp4o
